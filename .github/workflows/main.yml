name: ci

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

  OCTOPUS_URL: ${{ vars.SERVER }}
  OCTOPUS_API_KEY: ${{ secrets.API_KEY }}
  OCTOPUS_SPACE: ${{ vars.SPACE }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install OctoVersion
        run: |
          dotnet tool install OctoVersion.Tool

      - name: Calculate Version
        id: calculate_version
        run: |
            dotnet tool run octoversion --CurrentBranch=${{ github.head_ref || github.ref }} --Patch ${{ github.run_number }} --DetectEnvironment true
            echo $OCTOVERSION_FullSemVer
            echo $OCTOVERSION_InformationalVersion
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            APP_VERSION=${{ steps.calculate_version.outputs.octoversion_fullsemver}}
            APP_INFO_VERSION=${{ steps.calculate_version.outputs.octoversion_informationalversion }}
          push: ${{ github.event_name != 'pull_request' }}  
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

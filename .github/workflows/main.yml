name: ci

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths-ignore:
      - '**md'

  pull_request:
    branches:
      - 'main'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  calculate-version:
    runs-on: ubuntu-latest

    outputs:
      app_version: ${{ steps.calculate_version.outputs.octoversion_fullsemver }}
      app_info_version: ${{ steps.calculate_version.outputs.octoversion_informationalversion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install OctoVersion
        run: |
          dotnet new tool-manifest
          dotnet tool install Octopus.OctoVersion.Tool

      - name: Calculate Version
        id: calculate_version
        run: |
            dotnet tool run octoversion --CurrentBranch=${{ github.head_ref || github.ref }} --Patch ${{ github.run_number }} --DetectEnvironment true
            echo $OCTOVERSION_FullSemVer
            echo $OCTOVERSION_InformationalVersion
  
  build-and-push-image:
    runs-on: ubuntu-latest    
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      repo: ${{ env.REPO }}

    needs: calculate-version
    steps:  
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "REPO=${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}
          tags: |
            type=ref,event=branch
            type=sha,enable=true,format=short
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: .
          file: docker/Dockerfile
          build-args: |
            APP_VERSION=${{ needs.calculate-version.outputs.app_version }}
            APP_INFO_VERSION=${{ needs.calculate-version.outputs.app_info_version }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.REPO }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest=${{ steps.push.outputs.digest }}
          touch "/tmp/digests/${digest#sha256:}"
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  
  merge:
    runs-on: ubuntu-latest
    needs: 
      - build-and-push-image

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ needs.build-and-push-image.outputs.repo }}
          tags: |
            type=ref,event=branch
            type=sha,enable=true,format=short

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ needs.build-and-push-image.outputs.repo }}@sha256:%s ' *)          
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ needs.build-and-push-image.outputs.repo }}:${{ steps.meta.outputs.version }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build-and-push-image
      - merge
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ needs.build-and-push-image.outputs.repo }}
        tags: |
          type=sha,enable=true,format=short

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'hyponome-web-dev'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_8c2570a67b274d07b315314e8b8cd7ed }}
        images: '${{ env.REGISTRY }}/${{ needs.build-and-push-image.outputs.repo }}:${{ steps.meta.outputs.version }}'